name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-windows:
    name: Build Windows bundles
    runs-on: windows-2022
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Install Tauri CLI
      run: cargo install tauri-cli --version "^2.0" --locked
      
    - name: Build Tauri bundles
      run: cargo tauri build --bundles msi,nsis -- --bin deepseek-desktop
      
    - name: Upload MSI artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-msi
        path: target/release/bundle/msi/*.msi
        retention-days: 90
        
    - name: Upload NSIS artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-nsis
        path: target/release/bundle/nsis/*.exe
        retention-days: 90

  build-linux:
    name: Build Linux bundles
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libwebkit2gtk-4.1-dev libgtk-3-dev libappindicator3-dev librsvg2-dev patchelf
        
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Install Tauri CLI
      run: cargo install tauri-cli --version "^2.0" --locked
      
    - name: Build Tauri bundles
      run: cargo tauri build --bundles deb,rpm
      
    - name: Fix DEB package
      run: ./fix-deb.sh
      continue-on-error: true
      
    - name: Upload DEB artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-deb
        path: target/release/bundle/deb/*.deb
        retention-days: 90
        
    - name: Upload RPM artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-rpm
        path: target/release/bundle/rpm/*.rpm
        retention-days: 90

  build-macos:
    name: Build macOS bundles
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Install Tauri CLI
      run: cargo install tauri-cli --version "^2.0" --locked
      
    - name: Build Tauri bundles
      run: cargo tauri build --bundles dmg
      
    - name: Upload DMG artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-dmg
        path: target/release/bundle/dmg/*.dmg
        retention-days: 90

  create-release:
    name: Create GitHub Release
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    permissions:
      contents: write
      
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist
        
    - name: Get tag name
      id: tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/**/*
        generate_release_notes: true
        draft: false
        prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') || contains(github.ref, 'rc') }}

